<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="k{oV5bc0R/UdbzZoOJsr" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="+bBSQ6emyW)oQ?o}r?b." editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function sspr(image: Image, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, in_dw?: number," line1="    in_dh?: number, flipx?: boolean, flipy?: boolean) {" line2="    dx -= scene.cameraLeft();" line3="    dy -= scene.cameraTop();" line4="    let dw = in_dw ? in_dw : sw;" line5="    let dh = in_dh ? in_dh : sh;" line6="    // Support negative dw and dh by flipping the target rectangle" line7="    if (dw &lt; 0) { dw = -dw; dx -= dw - 1; flipx = !flipx; }" line8="    if (dh &lt; 0) { dh = -dh; dy -= dh - 1; flipy = !flipy; }" line9="    // Iterate over destination pixels" line10="    // FIXME: maybe clamp if target area is too big?" line11="    for (let k = 0; k &lt; dh; ++k) {" line12="        for (let l = 0; l &lt; dw; ++l) {" line13="            let di = flipx ? dw - 1 - l : l;" line14="            let dj = flipy ? dh - 1 - k : k;" line15="" line16="            // Find source" line17="            let x = Math.round(sx + sw * di / dw);" line18="            let y = Math.round(sy + sh * dj / dh);" line19="" line20="            let col = image.getPixel(x, y); //m_ram.gfx.safe_get(x, y);" line21="            screen.setPixel(dx + l, dy + k, col);" line22="        }" line23="    }" line24="" line25="}" numlines="26"></mutation></block></statement></block><block type="function_definition" id="4`+|t)wAi~EK@$5t#bjX" x="1109" y="20"><mutation name="imageNotDisplayColor" functionid="S]ZXxx^cz1;STRPzk7YK"><arg name="img" id="ecbpkdb0gvrl27x2tejwpn" type="Image"></arg><arg name="x" id="jot3ve5yf1m3u38rs2sm" type="number"></arg><arg name="y" id="2et2dckox8ld1mmed5apf" type="number"></arg><arg name="color" id="2ec3fm6ph1iwcmt6fj196b" type="number"></arg></mutation><field name="function_name">imageNotDisplayColor</field><statement name="STACK"><block type="typescript_statement" id="IN_P{ml)D7[t%D%)`^?8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="for (let i = x; i &lt; x + img.width; i++) {" line1="        for (let j = y; j &lt; y + img.height; j++) {" line2="            if (img.getPixel(i - x, j - y) == color) {" line3="                img.setPixel(i - x, j - y, screen.getPixel(i, j))" line4="            }" line5="        }" line6="    }" numlines="7"></mutation></block></statement></block></xml>